What happens when you initialize a repository? Why do you need to do it?

	It creates a space to store and track other files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	it creates a place to store the files temporarily until they are ready to commit.

How can you use the staging area to make sure you have one commit per logical
change?

	when the changes are not big enough I can just store it in the staging area, then after I make enough changes I can commit them together.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	branches help when I want to make a new version of the file but also keep the original one unchanged.

How do the diagrams help you visualize the branch structure?

	It shows me which commits are in which branch

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	merging two branches will create a new commit that contains the changes made in the two branches since they diverge. By representing it in the diagram we can easily find out what kind of change was made in which commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	automatic merging can save a lot of time but can also make mistakes. For example, one programmer decide to delete one line but the other programmer may disagree with him. Merging manually give them a chance to discuss about it, but it may be a waste of time.